# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'app.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.Start_Pico = QtWidgets.QPushButton(self.centralwidget)
        self.Start_Pico.setGeometry(QtCore.QRect(10, 10, 81, 17))
        self.Start_Pico.setObjectName("Start_Pico")
        self.Start_Streaming = QtWidgets.QPushButton(self.centralwidget)
        self.Start_Streaming.setGeometry(QtCore.QRect(10, 30, 81, 17))
        self.Start_Streaming.setObjectName("Start_Streaming")
        self.Param_channel = QtWidgets.QGroupBox(self.centralwidget)
        self.Param_channel.setGeometry(QtCore.QRect(100, 10, 151, 161))
        self.Param_channel.setObjectName("Param_channel")
        self.Channel = QtWidgets.QComboBox(self.Param_channel)
        self.Channel.setGeometry(QtCore.QRect(10, 40, 131, 21))
        self.Channel.setObjectName("Channel")
        self.Channel.addItem("")
        self.Channel.addItem("")
        self.Channel.addItem("")
        self.Channel.addItem("")
        self.Channel_calibre_texte = QtWidgets.QTextBrowser(self.Param_channel)
        self.Channel_calibre_texte.setGeometry(QtCore.QRect(10, 100, 41, 21))
        self.Channel_calibre_texte.setObjectName("Channel_calibre_texte")
        self.Channel_offste_texte = QtWidgets.QTextBrowser(self.Param_channel)
        self.Channel_offste_texte.setGeometry(QtCore.QRect(10, 130, 41, 21))
        self.Channel_offste_texte.setObjectName("Channel_offste_texte")
        self.Channel_type = QtWidgets.QComboBox(self.Param_channel)
        self.Channel_type.setGeometry(QtCore.QRect(10, 70, 131, 22))
        self.Channel_type.setObjectName("Channel_type")
        self.Channel_type.addItem("")
        self.Channel_type.addItem("")
        self.Channel_state = QtWidgets.QCheckBox(self.Param_channel)
        self.Channel_state.setGeometry(QtCore.QRect(10, 20, 131, 16))
        self.Channel_state.setObjectName("Channel_state")
        self.Channel_calibre = QtWidgets.QComboBox(self.Param_channel)
        self.Channel_calibre.setGeometry(QtCore.QRect(60, 100, 81, 22))
        self.Channel_calibre.setObjectName("Channel_calibre")
        self.Channel_calibre.addItem("")
        self.Channel_calibre.addItem("")
        self.Channel_calibre.addItem("")
        self.Channel_calibre.addItem("")
        self.Channel_calibre.addItem("")
        self.Channel_calibre.addItem("")
        self.Channel_calibre.addItem("")
        self.Channel_calibre.addItem("")
        self.Channel_calibre.addItem("")
        self.Channel_calibre.addItem("")
        self.Channel_calibre.addItem("")
        self.Channel_calibre.addItem("")
        self.spinBox = QtWidgets.QSpinBox(self.Param_channel)
        self.spinBox.setGeometry(QtCore.QRect(60, 130, 81, 22))
        self.spinBox.setMinimum(-1)
        self.spinBox.setMaximum(1)
        self.spinBox.setSingleStep(1000)
        self.spinBox.setObjectName("spinBox")
        self.Param_Trigger = QtWidgets.QGroupBox(self.centralwidget)
        self.Param_Trigger.setGeometry(QtCore.QRect(260, 10, 171, 161))
        self.Param_Trigger.setObjectName("Param_Trigger")
        self.Trigger_state = QtWidgets.QCheckBox(self.Param_Trigger)
        self.Trigger_state.setGeometry(QtCore.QRect(10, 20, 53, 14))
        self.Trigger_state.setObjectName("Trigger_state")
        self.Trigger_seuil_texte = QtWidgets.QTextBrowser(self.Param_Trigger)
        self.Trigger_seuil_texte.setGeometry(QtCore.QRect(10, 40, 71, 21))
        self.Trigger_seuil_texte.setObjectName("Trigger_seuil_texte")
        self.Trigger_seuil = QtWidgets.QSpinBox(self.Param_Trigger)
        self.Trigger_seuil.setGeometry(QtCore.QRect(91, 40, 71, 22))
        self.Trigger_seuil.setMinimum(-10)
        self.Trigger_seuil.setMaximum(10)
        self.Trigger_seuil.setObjectName("Trigger_seuil")
        self.Trigger_direction = QtWidgets.QComboBox(self.Param_Trigger)
        self.Trigger_direction.setGeometry(QtCore.QRect(72, 70, 91, 22))
        self.Trigger_direction.setObjectName("Trigger_direction")
        self.Trigger_direction.addItem("")
        self.Trigger_direction.addItem("")
        self.Trigger_direction.addItem("")
        self.Trigger_direction.addItem("")
        self.Trigger_direction.addItem("")
        self.Trigger_direction_texte = QtWidgets.QTextBrowser(self.Param_Trigger)
        self.Trigger_direction_texte.setGeometry(QtCore.QRect(10, 70, 51, 21))
        self.Trigger_direction_texte.setObjectName("Trigger_direction_texte")
        self.Trigger_retard_texte = QtWidgets.QTextBrowser(self.Param_Trigger)
        self.Trigger_retard_texte.setGeometry(QtCore.QRect(10, 100, 71, 21))
        self.Trigger_retard_texte.setObjectName("Trigger_retard_texte")
        self.Trigger_attente_texte = QtWidgets.QTextBrowser(self.Param_Trigger)
        self.Trigger_attente_texte.setGeometry(QtCore.QRect(10, 130, 71, 21))
        self.Trigger_attente_texte.setObjectName("Trigger_attente_texte")
        self.Trigger_retard = QtWidgets.QSpinBox(self.Param_Trigger)
        self.Trigger_retard.setGeometry(QtCore.QRect(91, 100, 71, 22))
        self.Trigger_retard.setObjectName("Trigger_retard")
        self.Trigger_attente = QtWidgets.QSpinBox(self.Param_Trigger)
        self.Trigger_attente.setGeometry(QtCore.QRect(90, 130, 71, 22))
        self.Trigger_attente.setMaximum(1000)
        self.Trigger_attente.setObjectName("Trigger_attente")
        self.Param_Streaming = QtWidgets.QGroupBox(self.centralwidget)
        self.Param_Streaming.setGeometry(QtCore.QRect(440, 20, 351, 151))
        self.Param_Streaming.setObjectName("Param_Streaming")
        self.Streaming_mode_texte = QtWidgets.QTextBrowser(self.Param_Streaming)
        self.Streaming_mode_texte.setGeometry(QtCore.QRect(10, 20, 71, 20))
        self.Streaming_mode_texte.setObjectName("Streaming_mode_texte")
        self.Streaming_mode = QtWidgets.QComboBox(self.Param_Streaming)
        self.Streaming_mode.setGeometry(QtCore.QRect(10, 50, 71, 22))
        self.Streaming_mode.setObjectName("Streaming_mode")
        self.Streaming_mode.addItem("")
        self.Streaming_mode.addItem("")
        self.Streaming_mode.addItem("")
        self.Streaming_mode.addItem("")
        self.Streaming_ratiomode_texte = QtWidgets.QTextBrowser(self.Param_Streaming)
        self.Streaming_ratiomode_texte.setGeometry(QtCore.QRect(10, 80, 71, 21))
        self.Streaming_ratiomode_texte.setObjectName("Streaming_ratiomode_texte")
        self.Streaming_ratiomode = QtWidgets.QSpinBox(self.Param_Streaming)
        self.Streaming_ratiomode.setGeometry(QtCore.QRect(10, 110, 71, 22))
        self.Streaming_ratiomode.setMinimum(1)
        self.Streaming_ratiomode.setMaximum(1000)
        self.Streaming_ratiomode.setObjectName("Streaming_ratiomode")
        self.Echantillonnage = QtWidgets.QGroupBox(self.Param_Streaming)
        self.Echantillonnage.setGeometry(QtCore.QRect(90, 20, 251, 111))
        self.Echantillonnage.setObjectName("Echantillonnage")
        self.buffer_size_texte = QtWidgets.QTextBrowser(self.Echantillonnage)
        self.buffer_size_texte.setGeometry(QtCore.QRect(10, 20, 101, 21))
        self.buffer_size_texte.setObjectName("buffer_size_texte")
        self.intervale_texte = QtWidgets.QTextBrowser(self.Echantillonnage)
        self.intervale_texte.setGeometry(QtCore.QRect(10, 50, 101, 21))
        self.intervale_texte.setObjectName("intervale_texte")
        self.Echantillonnage_texte = QtWidgets.QTextBrowser(self.Echantillonnage)
        self.Echantillonnage_texte.setGeometry(QtCore.QRect(10, 80, 161, 21))
        self.Echantillonnage_texte.setObjectName("Echantillonnage_texte")
        self.buffer_size = QtWidgets.QSpinBox(self.Echantillonnage)
        self.buffer_size.setGeometry(QtCore.QRect(120, 20, 51, 22))
        self.buffer_size.setObjectName("buffer_size")
        self.intervale = QtWidgets.QSpinBox(self.Echantillonnage)
        self.intervale.setGeometry(QtCore.QRect(120, 50, 51, 22))
        self.intervale.setObjectName("intervale")
        self.comboBox = QtWidgets.QComboBox(self.Echantillonnage)
        self.comboBox.setGeometry(QtCore.QRect(180, 50, 71, 22))
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.Start_Pico.setText(_translate("MainWindow", "Start Picoscope"))
        self.Start_Streaming.setText(_translate("MainWindow", "Start experiment"))
        self.Param_channel.setTitle(_translate("MainWindow", "Param√®tre de la voie de l\'osciloscope"))
        self.Channel.setItemText(0, _translate("MainWindow", "Voie A"))
        self.Channel.setItemText(1, _translate("MainWindow", "Voie B"))
        self.Channel.setItemText(2, _translate("MainWindow", "Voie C"))
        self.Channel.setItemText(3, _translate("MainWindow", "Voie D"))
        self.Channel_calibre_texte.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Calibre</p></body></html>"))
        self.Channel_offste_texte.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Offset</p></body></html>"))
        self.Channel_type.setItemText(0, _translate("MainWindow", "Alimentation DC"))
        self.Channel_type.setItemText(1, _translate("MainWindow", "Alimentation AC"))
        self.Channel_state.setText(_translate("MainWindow", "Activer"))
        self.Channel_calibre.setItemText(0, _translate("MainWindow", "10 mV"))
        self.Channel_calibre.setItemText(1, _translate("MainWindow", "20 mV"))
        self.Channel_calibre.setItemText(2, _translate("MainWindow", "50 mV"))
        self.Channel_calibre.setItemText(3, _translate("MainWindow", "100 mV"))
        self.Channel_calibre.setItemText(4, _translate("MainWindow", "200 mV"))
        self.Channel_calibre.setItemText(5, _translate("MainWindow", "500 mV"))
        self.Channel_calibre.setItemText(6, _translate("MainWindow", "1 V"))
        self.Channel_calibre.setItemText(7, _translate("MainWindow", "2 V"))
        self.Channel_calibre.setItemText(8, _translate("MainWindow", "5 V"))
        self.Channel_calibre.setItemText(9, _translate("MainWindow", "10 V"))
        self.Channel_calibre.setItemText(10, _translate("MainWindow", "20 V"))
        self.Channel_calibre.setItemText(11, _translate("MainWindow", "50 V"))
        self.Param_Trigger.setTitle(_translate("MainWindow", "Param√®tre du Trigger"))
        self.Trigger_state.setText(_translate("MainWindow", "Activer"))
        self.Trigger_seuil_texte.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Seuil</p></body></html>"))
        self.Trigger_direction.setItemText(0, _translate("MainWindow", "ABOVE"))
        self.Trigger_direction.setItemText(1, _translate("MainWindow", "BELOW"))
        self.Trigger_direction.setItemText(2, _translate("MainWindow", "RISING"))
        self.Trigger_direction.setItemText(3, _translate("MainWindow", "FALLING"))
        self.Trigger_direction.setItemText(4, _translate("MainWindow", "RISING or FALLING"))
        self.Trigger_direction_texte.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Direction</p></body></html>"))
        self.Trigger_retard_texte.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Retard</p></body></html>"))
        self.Trigger_attente_texte.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Attente (en ms)</p></body></html>"))
        self.Param_Streaming.setTitle(_translate("MainWindow", "Param√®tre de l\'acquisition "))
        self.Streaming_mode_texte.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Mode</p></body></html>"))
        self.Streaming_mode.setItemText(0, _translate("MainWindow", "NONE"))
        self.Streaming_mode.setItemText(1, _translate("MainWindow", "DECIMATE"))
        self.Streaming_mode.setItemText(2, _translate("MainWindow", "AGGREGATE"))
        self.Streaming_mode.setItemText(3, _translate("MainWindow", "AVERAGE"))
        self.Streaming_ratiomode_texte.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Ratio Mode</p></body></html>"))
        self.Echantillonnage.setTitle(_translate("MainWindow", "Echantillonnage"))
        self.buffer_size_texte.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Taille de la m√©moire</p></body></html>"))
        self.intervale_texte.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">temps d\'√©chantillonnage</p></body></html>"))
        self.Echantillonnage_texte.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Echantillonnage en 0 GS/s</p></body></html>"))
        self.comboBox.setItemText(0, _translate("MainWindow", "femtoseconde"))
        self.comboBox.setItemText(1, _translate("MainWindow", "picoseconde"))
        self.comboBox.setItemText(2, _translate("MainWindow", "nanoseconde"))
        self.comboBox.setItemText(3, _translate("MainWindow", "microseconde"))
        self.comboBox.setItemText(4, _translate("MainWindow", "milliseconde"))
        self.comboBox.setItemText(5, _translate("MainWindow", "seconde"))
